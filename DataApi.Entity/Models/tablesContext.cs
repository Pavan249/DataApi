// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataApi.Entity.Models
{
    public partial class tablesContext : DbContext
    {
        public tablesContext()
        {
        }

        public tablesContext(DbContextOptions<tablesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<PhoneDetail> PhoneDetail { get; set; }
        public virtual DbSet<StudentDetails> StudentDetails { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=STS668L-PAVANKU;Initial Catalog=tables;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PhoneDetail>(entity =>
            {
                entity.Property(e => e.Is_deleted).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<StudentDetails>(entity =>
            {
                entity.Property(e => e.CreatedTimeStamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Is_deleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.UpdateTimeStamp).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Location)
                    .WithMany(p => p.StudentDetails)
                    .HasForeignKey(d => d.LocationId)
                    .HasConstraintName("FK_StudentDetails_StudentDetails");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}